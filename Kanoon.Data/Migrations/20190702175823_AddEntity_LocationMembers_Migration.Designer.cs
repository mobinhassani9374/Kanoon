// <auto-generated />
using Kanoon.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kanoon.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190702175823_AddEntity_LocationMembers_Migration")]
    partial class AddEntity_LocationMembers_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kanoon.DomainModels.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Kanoon.DomainModels.Entities.LocationMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<int>("LocationId");

                    b.Property<string>("PhoneNumbers");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationMembers");
                });

            modelBuilder.Entity("Kanoon.DomainModels.Entities.LocationMember", b =>
                {
                    b.HasOne("Kanoon.DomainModels.Entities.Location", "Location")
                        .WithMany("Members")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
